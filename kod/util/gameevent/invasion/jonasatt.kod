% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
JonasAttack is Invasion

constants:

   include blakston.khd

resources:

   JonasAttack_start_msg = \
      "~B~k[Event]~n ~B~v The rebels are advancing!"

   JonasAttack_end_msg = \
      "~B~k[Event]~n ~B~v The rebels fall back in failure."

   JonasAttack_phase2_msg = \
      "~B~k[Event]~n ~B~v The rebels have brought mountain beasts to assist "
      "them!"

   JonasAttack_phase3_msg = \
      "~B~k[Event]~n ~B~v The royal princess has sent her troops to assist in "
      "the attack."

   JonasAttack_finalphase_msg = \
      "~B~k[Event]~n ~B~v The royal guards have brought beasts from the "
      "mountains to assist them in their final attack!"

classvars:

   vrStartMessage = JonasAttack_start_msg
   vrEndMessage = JonasAttack_end_msg

   vbAnnounce = TRUE

properties:

   plEventRooms = $
   piRebelTroops = 15
   piTrolls = 10
   piPrincessTroops = 15
   piGroundWormQueen = 10
   piActiveRoom = RID_TOS_EAST
   piPhase = 0

messages:

   ChooseRoom()
   {
      local iRand;

      if (piPhase = 4)
      {
         iRand = Random(1,3);
      }
      else
      {
         iRand = Random(1,piPhase);
      }

      plEventRooms = [ RID_TOS, RID_TOS_EAST, RID_DUKE1 ];

      switch (iRand)

      {
         case 1:
            piActiveRoom = RID_TOS_EAST;
            plSpawnRects = [ [[22,8],[30,17]], [[36,8],[48,24]],
                           [[39,16],[46,26]], [[43,31],[49,41]] ];
            break;
      
         case 2:
            piActiveRoom = RID_TOS;
            plSpawnRects = [ [[54,5],[61,13]], [[49,11],[62,27]],
                           [[54,29],[59,40]], [[14,16],[49,21]] ];
            break;

         case 3:
            piActiveRoom = RID_DUKE1;
            plSpawnRects = [ [[14,20],[17,39]], [[33,23],[37,28]],
                           [[24,19],[28,26]], [[21,31],[25,34]] ];
            break;

      }

      return;
   }

   Update()
   {
      if piPhase = 1
      {
         if (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
            #class=&RebelTroop) = 0)
         {
            Send(self,@PhaseTwo);
         }
      }

      if piPhase = 2
      {
         if ((Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&Troll) = 0))
         {
            Send(self,@PhaseThree);
         }
      }

      if piPhase = 3
      {
         if ((Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&PrincessTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&PrincessTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&PrincessTroop) = 0))
         {
            Send(self,@FinalPhase);
         }
      }

      if piPhase = 4
      {
         if ((Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),@CountMonsters,
               #class=&DarkAngel) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS_EAST),@CountMonsters,
               #class=&PrincessTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_TOS),@CountMonsters,
               #class=&PrincessTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&RebelTroop) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&Troll) = 0)
            AND (Send(Send(SYS,@FindRoomByNum,#num=RID_DUKE1),
               @CountMonsters,#class=&PrincessTroop) = 0))
         {
            % Call NotifyEngineEndEvent to handle ending the event properly.
            % This deletes the event in the GameEventEngine, which also calls
            % the appropriate code in EndEvent, which handles the end of
            % this event.
            Send(self,@NotifyEngineEndEvent);
         }
      }

      propagate;
   }

   StartEvent()
   {
      Send(self,@PhaseOne);

      propagate;
   }

   PhaseOne()
   {
      local i,lSpawnPoint,oMonster;

      piPhase = 1;

      i = piRebelTroops;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&RebelTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      return;
   }

   PhaseTwo()
   {
      local i,lSpawnPoint,oMonster;

      piPhase = 2;

      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,
               #string=JonasAttack_phase2_msg);
      }

      i = piRebelTroops;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&RebelTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piTrolls;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&Troll);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      return;
   }

   PhaseThree()
   {
      local i,lSpawnPoint,oMonster;

      piPhase = 3;

      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,
               #string=JonasAttack_phase3_msg);
      }

      i = piRebelTroops;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&RebelTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piTrolls;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&Troll);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piPrincessTroops;
      
      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&PrincessTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      return;
   }

   FinalPhase()
   {
      local i,lSpawnPoint,oMonster;

      piPhase = 4;

      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,
               #string=JonasAttack_finalphase_msg);
      }

      i = piRebelTroops;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&RebelTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piTrolls;

      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&Troll);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piPrincessTroops;
      
      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&PrincessTroop);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      i = piGroundWormQueen;
      
      while (i > 0)
      {
         Send(self,@ChooseRoom);
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         oMonster = Create(&GroundWormQueen);
         Send(oMonster,@SetDontDispose);
         Send(Send(SYS,@FindRoomByNum,#num=piActiveRoom),
               @NewHold,
               #what=oMonster,
               #new_row=Nth(lSpawnPoint,1),
               #new_col=Nth(lSpawnPoint,2));
         i = i - 1;
      }

      return;
   }

   EndEvent()
   {
      Send(self,@ClearRooms);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
