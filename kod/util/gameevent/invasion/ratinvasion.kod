% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
RatInvasion is Invasion

constants:

   include blakston.khd

resources:

   RatInvasion_start_msg = \
      "~B~k[Event]~n ~B~v The reign of the Rat King has begun."
      
   RatInvasion_end_msg = \
      "~B~k[Event]~n ~B~v The reign of the Rat King has ended."

   RatInvasion_phase2_msg = \
      "~B~k[Event]~n ~B~v The reign of the Rat King has entered phase two."
      
   RatInvasion_phase3_msg = \
      "~B~k[Event]~n ~B~v The reign of the Rat King has entered phase three."
      
   RatInvasion_finalphase_msg = \
      "~B~k[Event]~n ~B~v The reign of the Rat King has entered the final phase."
      
classvars:

   vrStartMessage = RatInvasion_start_msg
   vrEndMessage = RatInvasion_end_msg

   vbAnnounce = TRUE
   
properties:

   plEventRooms = $
   plSpawnRects = $
   piSmallRats = 25
   piGiantRats = 10
   piRatSoldiers = 5
   piActiveRoom = RID_TOS
   piPhase = 0
   
messages:

   Constructor()
   {
      plEventRooms = [ RID_TOS, RID_BAR_NORTH ];
      plSpawnRects = [ [[54,5],[61,13]], [[49,11],[62,27]], [[54,29],[59,40]], [[14,16],[49,21]] ];

      propagate;
   }
   
   Delete()
   {
      propagate;
   }

   Update()
   {
      if piPhase = 1
      {
         if Send(self,@CountMonsters,#type=&SmallRat) = 0
         {
            Send(self,@PhaseTwo);
         }
      }
      if piPhase = 2
      {
         if Send(self,@CountMonsters,#type=&GiantRat) = 0
            AND Send(self,@CountMonsters,#type=&SmallRat) = 0
         {
            Send(self,@PhaseThree);
         }
      }
      if piPhase = 3
      {
         if Send(self,@CountMonsters,#type=&GiantRatSoldier) = 0
            AND Send(self,@CountMonsters,#type=&GiantRat) = 0
            AND Send(self,@CountMonsters,#type=&SmallRat) = 0
         {
            Send(self,@FinalPhase);
         }
      }
      if piPhase = 4
      {
         if Send(self,@CountMonsters,#type=&GiantRatKing) = 0
         {
            Send(self,@EndEvent);
         }
      }
      
      return;
   }
   
   StartEvent()
   {
      Send(self,@PhaseOne);
      
      propagate;
   }
   
   PhaseOne()
   {
      local i,lSpawnPoint;
      
      piPhase = 1;
      
      i = piSmallRats;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&SmallRat),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      return;
   }
   
   PhaseTwo()
   {
      local i,lSpawnPoint;
      
      piPhase = 2;
      
      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,#string=RatInvasion_phase2_msg);
      }
      
      i = piSmallRats;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&SmallRat),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      i = piGiantRats;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&GiantRat),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      return;
   }
   
   PhaseThree()
   {
      local i,lSpawnPoint;
      
      piPhase = 3;
      
      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,#string=RatInvasion_phase3_msg);
      }      
      
      i = piSmallRats;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&SmallRat),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      i = piGiantRats;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&GiantRat),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      i = piRatSoldiers;
      
      while(i > 0)
      {
         lSpawnPoint = Send(self,@MakeSpawnPoint);
         Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=Create(&GiantRatSoldier),
                                                          #new_row=Nth(lSpawnPoint,1),
                                                          #new_col=Nth(lSpawnPoint,2));
         i=i-1;
      }
      
      return;
   }
   
   FinalPhase()
   {
      local oKing;
      
      piPhase = 4;
      
      if vbAnnounce
      {
         Send(SYS,@SystemBroadcast,#type=SAY_MESSAGE,#string=RatInvasion_finalphase_msg);
      }      
      
      oKing = Create(&GiantRatKing);
      Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@NewHold,#what=oKing,#new_row=51,#new_col=18);

      return;
   }

   EndEvent()
   {
      propagate;
   }

   CountMonsters(type=$)
   {
      local i,count,lActive;
   
      if type = $
      {
         return;
      }
   
      count = 0;
      lActive = Send(Send(sys,@FindRoomByNum,#num=piActiveRoom),@GetPlActive);
      
      for i in lActive
      {
         if IsClass(Nth(i,1),type)
         {
            count = count + 1;
         }
      }
      
      return count;
   }
   
   MakeSpawnPoint()
   {
      local lCoords, spawnRect;
      
      spawnRect = Nth(plSpawnRects,Random(1,Length(plSpawnRects)));
      
      lCoords = [ Random(Nth(Nth(spawnRect,1),1),Nth(Nth(spawnRect,2),1)),
                  Random(Nth(Nth(spawnRect,1),2),Nth(Nth(spawnRect,2),2)) ];
   
      return lCoords;
   }
   
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

