% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Punch is Unarmed

constants:

   include blakston.khd

resources:
   punch_name_rsc = "punch"
   punch_icon_rsc = punchico.bgf
   punch_desc_rsc = "This is the most basic hand-to-hand combat move.  Can be very strong for a powerful warrior, but is extremely tiring."

   punch_player_was_hit = "%s%s connects a punch solidly on your jaw."
   punch_player_hit_something = "%sYou hit %s%s with a hard right cross."

   punch_player_killed_something = "%s%s crumples to the ground, never to rise again."
   punch_player_was_killed = "The last thing you see is %s%s's fist speeding towards your nose."

   punch_skill_intro = "Weaponcraft Lv. 1: The most basic of fighting skills, used by fighters and mages alike."
classvars:

   vrName = punch_name_rsc
   vrIcon = punch_icon_rsc
   vrDesc = punch_desc_rsc

   vrPlayer_was_hit = punch_player_was_hit
   vrPlayer_hit_something = punch_player_hit_something
   vrPlayer_was_killed = punch_player_was_killed
   vrPlayer_killed_something = punch_player_killed_something

   vrSkill_intro = punch_skill_intro

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE
   viSchool = SKS_FENCING

   viSkill_num = SKID_PUNCH
   viskillExertion = 2
   vbCheck_exertion = FALSE

   viSkill_level = 1

   viSkill_Num = SKID_PUNCH

   VbAutomatic = FALSE  %  If this is set to TRUE, then the effects of this
                        %  skill happen automatically, and are not accessible
                        %  via menu.

   viAttack_Type = ATCK_WEAP_UNARMED+ATCK_WEAP_PUNCH

properties:

messages:

   GetRequisiteStat(who=$)
   "Varies from skill to skill and spell to spell."
   {
      return Send(who,@GetMight);
   }

   PlayerWasHitMsg(who=$,attacker=$,damage=$)
   "The stroke may choose it's own damage give or recieve message.  Otherwise"
   "player.kod will just choose a default."
   {
       send(who,@msgsenduser,#message_rsc=vrPlayer_was_hit,
                #parm1=send(attacker,@getcapdef),#parm2=send(attacker,@getname));
       return TRUE;
   }

   PlayerKilledSomethingMsg(who=$,victim=$,damage=$)
   "The stroke may choose it's own damage give or recieve message.  Otherwise"
   "player.kod will offer the default 'You killed the whatever' message."
   {
      % Is this really necessary?  Can't we just use the messages defined in battler instead?
      
      if (Send(who,@GetWeapon) <> $)
      {
         % They have a weapon, probably a touch attack.  Let that do it's own damage message.
         return FALSE;
      }
      send(who,@msgsenduser,#message_rsc=vrPlayer_killed_something,
           #parm1=send(victim,@getCapdef),#parm2=send(victim,@getname));
      return TRUE;
   }
   
   DamageFactors(damage=0, who=$, weapon_used = $)
   "Different skills/strokes are affected by different stats differently."
   {
      local stat;
	  
	  % Get proficiency bonus.
		damage = damage + (send(who,@GetSkillAbility,#skill_num=SKID_BRAWLING)+1)*damage/100;

      % Get stat damage bonus.
      stat = (send(who,@GetMight));

      damage = (50+stat)*damage/100;

      return damage;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
