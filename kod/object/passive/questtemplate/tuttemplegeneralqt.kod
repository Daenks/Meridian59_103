% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TutorialTempleGeneralQuest is QuestTemplate
% Quest template QST_ID_TUTORIAL_TEMPLE_GENERAL = 75.
% Quest nodes 217, 218
% QNT_ID_TUTORIAL_TEMPLE_GENERAL_ONE, QNT_ID_TUTORIAL_TEMPLE_GENERAL_TWO

% QuestTemplate is
% [ quest template index
%   quest template object
%   number of players,
%   type of quest,
%   eligible player restrictions,
%   quest nodes,
%   max number active,
%   currently active quests,
%   percent chance of scheduling (on timer firing)
%   special restrictions ]

constants:

   include blakston.khd

resources:

   % Quest description.
   tuttemplegeneralquest_icon_rsc = iblink.bgf
   tuttemplegeneralquest_name_rsc = "choose your path"
   tuttemplegeneralquest_desc_rsc = \
      "You are new to this world, but Princess Kateriina has commissioned "
      "this Temple of Knowledge to help train and prepare you. Speak to "
      "Jorath for assistance in choosing your combination of the seven "
      "native schools of abilities."

   tuttemplegeneralquest_completed_rsc = \
      "You have chosen your starting schools."

   % Quest resources.
   tuttemplegeneralquest_trigger_1 = "yes"
   tuttemplegeneralquest_assign_2 = \
      "Then proceed. Study the seven native schools and choose your "
      "combination of paths."
   tuttemplegeneralquest_success_2 = \
      "Chp chp chp chp chp chp chp!"
   tuttemplegeneralquest_failure_2 = \
      "Subject:  Ik ik ak\n"
      "Wak wak riija no ak!  Chp Chp kp ip!"

classvars:

   vrIcon = tuttemplegeneralquest_icon_rsc
   vrName = tuttemplegeneralquest_name_rsc
   vrDesc = tuttemplegeneralquest_desc_rsc

   vrCompleted = tuttemplegeneralquest_completed_rsc

   % The QST_ID constant for this quest.
   viQuestID = QST_ID_TUTORIAL_TEMPLE_GENERAL

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTTRIED_RECENTLY
   plSpecialRestrict = $
   piMaxPlayers = 20
   piSchedulePct = 10
   piTimeLimit = 10800 % 3 hours.

messages:

   Constructor()
   {
      % Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_TUTORIAL_TEMPLE_GENERAL_ONE,
                      QNT_ID_TUTORIAL_TEMPLE_GENERAL_TWO];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      % Template #31 is bone priestess quest kickoff
      % QNT_ID_TUTORIAL_TEMPLE_GENERAL_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[tuttemplegeneralquest_trigger_1],
               #quest_node_index=QNT_ID_BONE_PRIESTESS_OPB_ONE)
      {
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_BONE_PRIESTESS_OPB_ONE,
               #new_NPC_list=Send(oLib,@GetOccupationList,
                                 #cNPC_class=&KocatanBonePriestess));
      }
      else
      {
         Debug("Error building QN: QNT_ID_BONE_PRIESTESS_OPB_ONE");
      }

      % Template #32 is bone priestess quest
      % QNT_ID_BONE_PRIESTESS_OPB_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEMFINDCLASS,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &OrcPitBossHead, 1  ] ],
               #prizelist=[ [ QN_PRIZETYPE_ITEMCLASS, &SwordShardA, 1 ] ],
               #quest_node_index=QNT_ID_BONE_PRIESTESS_OPB_TWO)
      {
         Send(oQE,@SetQuestNodeNPCModifier,#index=QNT_ID_BONE_PRIESTESS_OPB_TWO,
               #new_mod=QN_NPCMOD_SAME);
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_BONE_PRIESTESS_OPB_TWO,
               #new_hint=tuttemplegeneralquest_assign_2);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_BONE_PRIESTESS_OPB_TWO,
               #new_hint=tuttemplegeneralquest_success_2);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_BONE_PRIESTESS_OPB_TWO,
               #new_hint=tuttemplegeneralquest_failure_2);
         Send(oQE,@SetQuestNodeTimeLimit,#index=QNT_ID_BONE_PRIESTESS_OPB_TWO,
               #new_limit=piTimeLimit);
      }
      else
      {
         Debug("Error building QN: QNT_ID_BONE_PRIESTESS_OPB_TWO");
      }

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
