% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Vulnerability is Hex

constants:

   include blakston.khd

resources:

   vulnerability_cast_rsc = \
      "%s%s's skin becomes the consistency of parchment."
   vulnerability_already_enchanted = \
      "That poor soul is already afflicted by vulnerability."
   vulnerability_start = "Your skin becomes the consistency of parchment."
   vulnerability_stop  = "Your vulnerable skin returns to normal."

   vulnerability_name_rsc = "vulnerability"
   vulnerability_icon_rsc = ienfeebl.bgf
   vulnerability_desc_rsc = \
      "Thins the target's skin, making them more vulnerable to "
      "the elements. "
      "This hex requires two orc teeth to cast."

   vuln_sound = qenfeebl.wav

classvars:

   vrName = vulnerability_name_rsc
   vrIcon = vulnerability_icon_rsc
   vrDesc = vulnerability_desc_rsc

   vrAlreadyEnchanted = vulnerability_already_enchanted
   vrEnchantment_On = vulnerability_start
   vrEnchantment_Off = vulnerability_stop
   vrSuccess = vulnerability_cast_rsc

   viSpell_num = SID_HEX_VULNERABILITY
   viSchool = SS_WITCHERY
   viSpell_level = 3
   viMana = 20
   viSpell_Exertion = 15

   viFlash = FLASH_BAD

   vrSucceed_wav = vuln_sound
   viChance_To_Increase = 15
   viMeditate_ratio = 40

properties:

   % Increases elemental damage taken by this percent
   piBaseEffect = 10

   piFlatDuration = 12000

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&OrcTooth,2],plReagents);

      return;
   }
   
   ModifyDefenseDamage(who=$,what=$,damage=$,atype=0,aspell=0,iHexEffect=0)
   {
      if aspell <> 0
      {
         % partially magical attack, half effect
         if atype <> 0
         {
            damage = damage*(100 + (((piBaseEffect * iHexEffect)/100)/2))/100;
         }
         else
         {
            damage = damage*(100 + ((piBaseEffect * iHexEffect)/100)) / 100;
         }
      }

      return damage;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
