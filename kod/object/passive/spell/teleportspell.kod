% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TeleportationSpell is Spell

% All teleportation spells are cast, then fire after a certain amount of time.
% Changing rooms, logging off, or attacking all break a teleporation in progress.
% In addition, players cannot teleport for a short time after engaging in combat.

% Hometown Recall returns you to your old location so that you can continue building.

constants:

   include blakston.khd

   TRANCE_TIME = 30000

resources:

   TeleportationSpell_name_rsc = "teleportation spell"
   TeleportationSpell_icon_rsc = ielusion.bgf
   TeleportationSpell_desc_rsc = \
      "Moves a player from one place to another."

   Teleport_Default_Start = "You begin teleporting."
   Teleport_Default_Already_Cast = "You are already teleporting."
   Teleport_Token_Cancel = "You cannot teleport while holding a token."
   Teleport_Attacked_Recently = "Your heart is still racing from your recent combat, making it impossible to focus enough to teleport."
   Teleport_Generic_Fail = "Something about this area prevents all forms of teleportation magics..."
   Teleport_Fail_Enemies_Nearby = "The delicate threads of your teleportation magics unravel due to the presence of nearby enemies!"

classvars:

   vrName = TeleportationSpell_name_rsc
   vrIcon = TeleportationSpell_icon_rsc
   vrDesc = TeleportationSpell_desc_rsc
   
   Teleport_Start_Rsc = Teleport_Default_Start
   Teleport_Already_Cast_Rsc = Teleport_Default_Already_Cast
   
   vbIsCombatRestricted = TRUE
   vbInstantInSafeZones = TRUE
   vbRestrictedInSomeAreas = TRUE

properties:

messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }

   GetNumSpellTargets()
   {
      return 0;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      local oRoom;

      if Send(who,@IsTeleporting)
      {
         Send(who,@MsgSendUser,#message_rsc=Teleport_Already_Cast_Rsc);

         return FALSE;
      }
      
      if Send(who,@FindHolding,#class=&Token)
         AND NOT IsClass(self,&Blink)
      {
        send(who,@MsgSendUser,#message_rsc=Teleport_Token_Cancel);
        
        return FALSE;
      }
      
      oRoom = Send(who,@GetOwner);
      
      if (oRoom = $
         OR NOT Send(oRoom,@CanHavePlayerPortal)
         OR Send(oRoom, @GetRegion) = RID_NEWB_BASE
         OR Send(oRoom, @GetRegion) = RID_GUEST_BASE)
         AND vbRestrictedInSomeAreas
      {
         Send(who,@MsgSendUser,#message_rsc=Teleport_Generic_Fail);
         return FALSE;
      }

      % Can't cast just after attacking someone
      if Send(who, @GetLastPlayerAttackTime) + Send(Send(SYS, @GetSettings), @TeleportAttackDelaySec) > GetTime()
         AND oRoom <> $
         AND NOT Send(oRoom,@CheckRoomFlag,#flag=ROOM_NO_COMBAT)
         AND Send(who,@CheckPlayerFlag,#flag=PFLAG_PKILL_ENABLE)
         AND vbIsCombatRestricted
      {
         Send(who, @MsgSendUser, #message_rsc = Teleport_Attacked_Recently);
         return FALSE;
      }
      
      if oRoom <> $
         AND NOT Send(oRoom,@CheckRoomFlag,#flag=ROOM_NO_COMBAT)
         AND NOT IsClass(oRoom,&GuildHall)
         AND vbIsCombatRestricted
         AND Send(who,@PlayerEnemiesInYellRange) <> $
      {
         Send(who,@MsgSendUser,#message_rsc=Teleport_Fail_Enemies_Nearby);
         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, iSpellPower = 0, oDestRoom = $)
   {
      local iDelay;

      if IsClass(self,&Elusion)
         AND oDestRoom = $
      {
         return;
      }

      Send(who,@MsgSendUser,#message_rsc=Teleport_Start_Rsc);

      % Start with the base time.  Reduce time by spellpower.
      iDelay = 1000 * Send(Send(SYS,@GetSettings),@GetTeleportBaseDelaySec,#what=self);
      iDelay = iDelay + (iDelay - (((iSpellPower+1) * iDelay) / 100));

      % No delay in safe zones. No point in making players wait.
      if Send(who,@GetOwner) <> $
         AND Send(Send(who,@GetOwner),@CheckRoomFlag,#flag=ROOM_NO_COMBAT)
         AND vbInstantInSafeZones
      {
         iDelay = 0;
      }

      send(who,@StartTeleportationTimer,#iTime=iDelay,#oTeleportationSpell=self,#oDestRoom=oDestRoom);

      propagate;
   }

   SpellBannedInArena()
   {
      return TRUE;
   }

   SuccessChance(who=$)
   {
      return TRUE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
