% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SummonWeb is WallSpell

constants:

   include blakston.khd

resources:

   SummonWeb_name_rsc = "spider web"
   SummonWeb_icon_rsc = iweb.bgf
   SummonWeb_overlay = webov.bgf
   SummonWeb_desc_rsc = \
      "The spider webs created by this spell may hamper the ability of those "
      "who stumble upon them to move.  "
      "Requires web moss to cast."
                        
   SummonWeb_cast_rsc = "A sticky field of spider webs appears before you."
   SummonWeb_failed_rsc = \
      "There is too much summoning magic focused here to create a web." 
   SummonWeb_sound = farenwala822m.wav

classvars:

   vrName = SummonWeb_name_rsc
   vrIcon = SummonWeb_icon_rsc
   vrDesc = SummonWeb_desc_rsc
   vrWeb_Overlay = SummonWeb_overlay

   viSpell_num = SID_SPIDER_WEB
   viSchool = SS_FAREN
   viSpell_level = 3
   viMana = 15
   viSpellExertion = 10
   viCast_time = 3000

   vrSucceed_wav = SummonWeb_sound
   viChance_To_Increase = 25
   viMeditate_ratio = 30

   viHarmful = TRUE

   % Webs can't kill anyone, so don't warn about being a murderer.
   viWallCanKill = FALSE

   vrSummonLimitMsg = SummonWeb_failed_rsc

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&WebMoss,1], plReagents);

      return;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      Send(who,@MsgSendUser,#message_rsc=SummonWeb_cast_rsc);

      propagate;
   }

   PlaceWallElements(seed = $)
   {
      local lSeeda, lSeedb, lSeedc, lSeedd, lSeede, lSeedf, lSeedg, lSeedh;

      % The standard seed is modified here.
      % [(1)caster,(2)spellpower,(3)duration,(4)charges,(5)speed,(6)direction,(7)step,(8)noise,(9)twirl]
      lSeeda = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),0,1,Nth(seed,8),3];
      lSeedb = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),1,1,Nth(seed,8),3];
      lSeedc = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),2,1,Nth(seed,8),3];
      lSeedd = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),3,1,Nth(seed,8),3];
      lSeede = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),4,1,Nth(seed,8),3];
      lSeedf = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),5,1,Nth(seed,8),3];
      lSeedg = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),6,1,Nth(seed,8),3];
      lSeedh = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),7,1,Nth(seed,8),3];

      Send(self,@SpawnElement,#seed=lSeeda,#who=Nth(seed,1),#xoffset=0,#yoffset=-3,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedb,#who=Nth(seed,1),#xoffset=2,#yoffset=-2,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedc,#who=Nth(seed,1),#xoffset=3,#yoffset=0,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedd,#who=Nth(seed,1),#xoffset=2,#yoffset=2,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeede,#who=Nth(seed,1),#xoffset=0,#yoffset=3,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedf,#who=Nth(seed,1),#xoffset=-2,#yoffset=2,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedg,#who=Nth(seed,1),#xoffset=-3,#yoffset=0,#walltype=&Web);
      Send(self,@SpawnElement,#seed=lSeedh,#who=Nth(seed,1),#xoffset=-2,#yoffset=-2,#walltype=&Web);

      propagate;
   }

   DoHold(what = $, otarget = $, duration = $, report=TRUE)
   "Holds target for durationsecs seconds."
   {
      local i;
            
      % Can cast spell if the 1 target item is a user
      if duration = $
      {
         duration = 10000;
      }
      
      if otarget = $
      {
         return FALSE;
      }

      % check for enchantment already applied
      if Send(otarget,@IsEnchanted,#what=self)
      {
         return FALSE;
      }      

      Send(oTarget,@StartEnchantment,#what=self,#time=duration,
           #report=report,#state=report);

      if IsClass(oTarget,&Player)
      {
         Send(oTarget,@SetOverlay,#what=self);
         Send(oTarget,@SetPlayerFlag,#Flag=PFLAG_NO_MOVE,#value=TRUE);
      }
      else  % class is &Monster
      {
         Send(oTarget,@ResetBehaviorFlags);
      }      

      return;
   }

   ModifyMonsterBehavior(mob = $)
   {
      Send(mob,@SetBehaviorFlag,#flag=AI_NOMOVE,#value=TRUE);

      return;      
   }

   SetSpellPlayerFlag(who = $)
   {
      Send(who,@SetPlayerFlag,#flag=PFLAG_NO_MOVE,#value=TRUE);

      return;
   }

   EndEnchantment(who = $, report = TRUE,state=$)
   {
      if IsClass(who,&Player)
      {
         Send(who,@SetPlayerFlag,#flag=PFLAG_NO_MOVE,#value=FALSE);
         Send(who,@RemoveOverlay,#what=self);
      }
      else
      {
         % Class is &Monster
         Post(who,@ResetBehaviorFlags); 
      }
     
      return;
   }

   %%% Overlay messages

   GetNumberOverlays(animation = $)
   {
      return 1;
   }

   SendOverlayInformation()
   {
      AddPacket(4,Send(self,@GetOverlay));
      AddPacket(1,Send(self,@GetOverlayHotspot));
      Send(self,@SendOverlayAnimation);

      return;
   }

   GetOverlayHotSpot(animation = $)
   {
      return HS_LEGS;
   }

   GetOverlay(animation = $)
   {
      return vrweb_overlay;
   }

   SendOverlayAnimation(iAnimation = $)
   {
      if iAnimation = PANM_WEAPON_ATTACK
      {
         AddPacket(1,ANIMATE_NONE, 2,2);

         return;
      }
      
      if iAnimation = PANM_BOW_FIRE
      { 
         AddPacket(1,ANIMATE_NONE, 2,3);

         return;
      }
      
      AddPacket(1,ANIMATE_NONE, 2,1);
      
      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
