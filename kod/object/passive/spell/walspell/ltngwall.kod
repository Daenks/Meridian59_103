% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
LightningWall is WallSpell

constants:

   include blakston.khd

resources:

   LightningWall_name_rsc = "lightning wall"
   LightningWall_icon_rsc = iwalllit.bgf
   LightningWall_desc_rsc = \
      "Creates a crackling barrier of electricity.  One who entered such a "
      "field would certainly feel more than thunder.  "
      "Requires blue mushrooms and yxrl to cast."

   LightningWall_cast_rsc = "A wall of lightning appears before you!"
   LightningWall_failed_rsc = \
      "There is too much summoning magic focused here to create a wall of "
      "lightning."

   LightningWall_sound = faren.wav

classvars:

   vrName = LightningWall_name_rsc
   vrIcon = LightningWall_icon_rsc
   vrDesc = LightningWall_desc_rsc

   viSpell_num = SID_LIGHTNING_WALL
   viSchool = SS_FAREN
   viSpell_level = 6
   viMana = 20
   viSpellExertion = 10

   viChance_To_Increase = 25
   viMeditate_ratio = 75
   viCast_time = 1000
   vrSucceed_wav = LightningWall_sound

   viHarmful = TRUE

   vrSummonLimitMsg = LightningWall_failed_rsc

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&BlueMushroom,3],plReagents);
      plReagents = Cons([&Yrxlsap,1], plReagents);

      return;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      Send(who,@MsgSendUser,#message_rsc=LightningWall_cast_rsc);

      propagate;
   }

   PlaceWallElements(seed = $)
   {
      local lSeeda, lSeedb, lSeedc, lSeedd, lSeede, lSeedf, iDirection, iXStep, iYStep;

      iDirection = Nth(seed,6);
      iXStep = Send(self,@GetXStep,#direction=iDirection);
      iYStep = Send(self,@GetYStep,#direction=iDirection);

      % The standard seed is modified here.
      % [(1)caster,(2)spellpower,(3)duration,(4)charges,(5)speed,(6)direction,(7)step,(8)noise,(9)twirl]
      lSeeda = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedb = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedc = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedd = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];
      lSeede = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];
      lSeedf = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];

      Send(self,@SpawnElement,#seed=lSeeda,#who=Nth(seed,1),#xoffset=iXStep,#yoffset=iYStep,#walltype=&WallOfLightning);
      Send(self,@SpawnElement,#seed=lSeedb,#who=Nth(seed,1),#xoffset=iXStep*2,#yoffset=iYStep*2,#walltype=&WallOfLightning);
      Send(self,@SpawnElement,#seed=lSeedc,#who=Nth(seed,1),#xoffset=iXStep*3,#yoffset=iYStep*3,#walltype=&WallOfLightning);
      Send(self,@SpawnElement,#seed=lSeedd,#who=Nth(seed,1),#xoffset=iXStep,#yoffset=iYStep,#walltype=&WallOfLightning);
      Send(self,@SpawnElement,#seed=lSeede,#who=Nth(seed,1),#xoffset=iXStep*2,#yoffset=iYStep*2,#walltype=&WallOfLightning);
      Send(self,@SpawnElement,#seed=lSeedf,#who=Nth(seed,1),#xoffset=iXStep*3,#yoffset=iYStep*3,#walltype=&WallOfLightning);

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
