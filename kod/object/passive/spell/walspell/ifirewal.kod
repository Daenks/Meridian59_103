% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
IllusionaryFireWall is WallSpell

constants:

   include blakston.khd

resources:

   IllusionaryFireWall_name_rsc = "illusionary firewall"
   IllusionaryFireWall_icon_rsc = iwallill.bgf
   IllusionaryFireWall_desc_rsc = \
      "Creates an illusionary wall of fire.  This wall will cause illusionary "
      "wounds, which are never lethal, to victims walking through it.  "
      "Requires rainbow ferns and firesand to cast."

   IllusionaryFireWall_cast_rsc = \
      "An illusionary wall of fire appears before you!"
   IllusionaryFireWall_failed_rsc = \
      "There is too much summoning magic focused here to create a wall of "
      "fire."
   IllusionaryFireWall_sound = farenwala822m.wav

classvars:

   vrName = IllusionaryFireWall_name_rsc
   vrIcon = IllusionaryFireWall_icon_rsc
   vrDesc = IllusionaryFireWall_desc_rsc

   viSpell_num = SID_ILLUSIONARY_FIREWALL
   viSchool = SS_RIIJA
   viSpell_level = 3
   viMana = 15
   viSpellExertion = 10
   viMeditate_ratio = 30

   viCast_time = 1000
   vrSucceed_wav = IllusionaryFireWall_sound

   viHarmful = TRUE

   % Illusionary fire can't kill anyone, so don't warn about being a murderer.
   viWallCanKill = FALSE

   vrSummonLimitMsg = IllusionaryFireWall_failed_rsc

properties:


messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&RainbowFern,3],plReagents);
      plReagents = Cons([&Firesand,2], plReagents);

      return;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 1)
   {
      Send(who,@MsgSendUser,#message_rsc=IllusionaryFireWall_cast_rsc);

      propagate;
   }

   PlaceWallElements(seed = $)
   {
      local lSeeda, lSeedb, lSeedc, lSeedd, lSeede, lSeedf, iDirection, iXStep, iYStep;

      iDirection = Nth(seed,6);
      iXStep = Send(self,@GetXStep,#direction=iDirection);
      iYStep = Send(self,@GetYStep,#direction=iDirection);

      % The standard seed is modified here.
      % [(1)caster,(2)spellpower,(3)duration,(4)charges,(5)speed,(6)direction,(7)step,(8)noise,(9)twirl]
      lSeeda = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedb = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedc = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+6) MOD 8,1,Nth(seed,8),0];
      lSeedd = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];
      lSeede = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];
      lSeedf = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,4),Nth(seed,5),(iDirection+2) MOD 8,1,Nth(seed,8),0];

      Send(self,@SpawnElement,#seed=lSeeda,#who=Nth(seed,1),#xoffset=iXStep,#yoffset=iYStep,#walltype=&IllusionaryWallOfFire);
      Send(self,@SpawnElement,#seed=lSeedb,#who=Nth(seed,1),#xoffset=iXStep*2,#yoffset=iYStep*2,#walltype=&IllusionaryWallOfFire);
      Send(self,@SpawnElement,#seed=lSeedc,#who=Nth(seed,1),#xoffset=iXStep*3,#yoffset=iYStep*3,#walltype=&IllusionaryWallOfFire);
      Send(self,@SpawnElement,#seed=lSeedd,#who=Nth(seed,1),#xoffset=iXStep,#yoffset=iYStep,#walltype=&IllusionaryWallOfFire);
      Send(self,@SpawnElement,#seed=lSeede,#who=Nth(seed,1),#xoffset=iXStep*2,#yoffset=iYStep*2,#walltype=&IllusionaryWallOfFire);
      Send(self,@SpawnElement,#seed=lSeedf,#who=Nth(seed,1),#xoffset=iXStep*3,#yoffset=iYStep*3,#walltype=&IllusionaryWallOfFire);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
