% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
RingOfFlames is WallSpell

constants:

   include blakston.khd

resources:

   RingOfFlames_name_rsc = "ring of flames"
   RingOfFlames_icon_rsc = iringfir.bgf
   RingOfFlames_desc_rsc = \
      "Creates a devastating firestorm around the caster.  "
      "Requires red mushrooms and firesand to cast."

   RingOfFlames_cast_rsc = "A ring of flames begins to form around you!"

   RingOfFlames_failed_rsc = \
      "There is too much summoning magic focused here to create a ring of "
      "flames." 

   RingOfFlames_sound = frngfir.wav

classvars:

   vrName = RingOfFlames_name_rsc
   vrIcon = RingOfFlames_icon_rsc
   vrDesc = RingOfFlames_desc_rsc

   viSpell_num = SID_RING_OF_FLAMES
   viSchool = SS_FAREN
   viSpell_level = 5
   viMana = 15
   viSpellExertion = 10
   viMeditate_ratio = 50

   vrSucceed_wav = RingOfFlames_sound

   viHarmful = TRUE
   viOutlaw = TRUE

   vrSummonLimitMsg = RingOfFlames_failed_rsc

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&RedMushroom,3],plReagents);
      plReagents = Cons([&Firesand,3], plReagents);

      return;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 1)
   {
      Send(who,@MsgSendUser,#message_rsc=RingOfFlames_cast_rsc);

      propagate;
   }

   PlaceWallElements(seed = $)
   {
      local lSeeda, lSeedb, lSeedc, lSeedd, lSeede, lSeedf, lSeedg, lSeedh;

      % The standard seed is modified here.
      % [(1)caster,(2)spellpower,(3)duration,(4)charges,(5)speed,(6)direction,(7)step,(8)noise,(9)twirl]
      lSeeda = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),0,1,Nth(seed,8),3];
      lSeedb = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),1,1,Nth(seed,8),3];
      lSeedc = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),2,1,Nth(seed,8),3];
      lSeedd = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),3,1,Nth(seed,8),3];
      lSeede = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),4,1,Nth(seed,8),3];
      lSeedf = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),5,1,Nth(seed,8),3];
      lSeedg = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),6,1,Nth(seed,8),3];
      lSeedh = [Nth(seed,1),Nth(seed,2),Nth(seed,3),Nth(seed,2)/5,Nth(seed,5),7,1,Nth(seed,8),3];

      Send(self,@SpawnElement,#seed=lSeeda,#who=Nth(seed,1),#xoffset=0,#yoffset=-1,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedb,#who=Nth(seed,1),#xoffset=1,#yoffset=-1,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedc,#who=Nth(seed,1),#xoffset=1,#yoffset=0,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedd,#who=Nth(seed,1),#xoffset=1,#yoffset=1,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeede,#who=Nth(seed,1),#xoffset=0,#yoffset=1,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedf,#who=Nth(seed,1),#xoffset=-1,#yoffset=1,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedg,#who=Nth(seed,1),#xoffset=-1,#yoffset=0,#walltype=&WallOfFire);
      Send(self,@SpawnElement,#seed=lSeedh,#who=Nth(seed,1),#xoffset=-1,#yoffset=-1,#walltype=&WallOfFire);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
