% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
BountyQuest is PassiveObject 

constants:

   include blakston.khd
   include protocol.khd

resources:

   bounty_name_rsc = "bounty"
   bounty_icon_rsc = light.bgf
   bounty_desc_text_rsc = "This is a bounty."
   
   bounty_success_singular_rsc = "You completed a bounty and have received %s%s!"
   bounty_success_numbitem_rsc = "You completed a bounty and have received %i %s!"
   bounty_inv_full_rsc = "You completed a bounty, but you could not hold the reward. Drop some items and try again."
   bounty_fail_rsc = "You failed a bounty."
   
   bounty_report_monster_singular_rsc = "You have %i minutes to kill %s%s, thereby receiving %s%s."
   bounty_report_item_singular_rsc = "You have %i minutes to acquire %s%s, thereby receiving %s%s."
   bounty_report_both_singular_rsc = "You have %i minutes to kill %s%s or acquire %s%s, thereby receiving %s%s."
   
   bounty_report_monster_numbitem_rsc = "You have %i minutes to kill %s%s, thereby receiving %i %s."
   bounty_report_item_numbitem_rsc = "You have %i minutes to acquire %s%s, thereby receiving %i %s."
   bounty_report_both_numbitem_rsc = "You have %i minutes to kill %s%s or acquire %s%s, thereby receiving %i %s."

classvars:

   vrName = spell_name_rsc
   vrIcon = spell_icon_rsc
   vrDesc = spell_desc_text_rsc
   vrSpell_intro = spell_intro_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE


properties:

   viBountyTime = 120 * 60
   viCreationTime = $
   ptBountyTimer = $
   
   piMonsterTargetClass = $
   piItemTargetClass = $
   
   piRewardClass = $
   piRewardAmount = 1
   
   % Give the reward even if the player can't carry it
   % Used for difficult or non-repeatable quests
   bForceReward = FALSE

   % Link back to player who has the bounty
   piOwner = $

messages:      

   Constructor(owner=$,monster_target=$,item_target=$,time=7200,reward_class=$,reward_amount=1,force_reward=FALSE)
   {
      viCreationTime = GetTime();
      CreateTimer(self,@EndBountyTimer,time);
      Send(SYS,@AddBountyToGlobalList,#bounty=self);
      
      Send(self,@SetBountyParameters,#owner=owner,#monster_target=monster_target,#item_target=item_target,#time=time,
            #reward_class=reward_class,#reward_amount=reward_amount,#force_reward=force_reward);

      Send(self,@BountyReport);
      
      propagate;
   }
   
   SetBountyParameters(owner=$,monster_target=$,item_target=$,time=7200,reward_class=$,reward_amount=1,force_reward=FALSE)
   {
      local oReward;
   
      if reward_class = $
      {
         Send(self,@Delete);
         return;
      }
      else
      {
         oReward = Create(reward_class);

         if NOT IsClass(oReward,&NumberItem)
            AND reward_amount > 1
         {
            reward_amount = 1;
         }
         Send(oReward,@Delete);
      }

      Send(self,@SetOwner,#owner=owner);
      Send(self,@SetMonsterTargetClass,#class=monster_target);
      Send(self,@SetItemTargetClass,#class=item_target);
      Send(self,@SetBountyTime,#time=time);
      Send(self,@SetReward,#reward_class=reward_class,#reward_amount=reward_amount);
      Send(self,@SetForceReward,#force_reward=force_reward);
      
      if NOT Send(self,@CheckValidBounty)
      {
         Send(self,@Delete);
      }

      return;
   }
   
   SetOwner(owner=$)
   {
      if owner <> $
         AND IsClass(owner,&User)
      {
         piOwner = owner;
      }
      return;
   }
   
   SetMonsterTargetClass(class=$)
   {
      piMonsterTargetClass = class;
      return;
   }
   
   SetItemTargetClass(class=$)
   {
      piItemTargetClass = class;
      return;
   }

   SetBountyTime(time=7200)
   {
      if ptBountyTimer <> $
      {
         DeleteTimer(ptBountyTimer);
         ptBountyTimer = $;
      }

      CreateTimer(self,@EndBountyTimer,time);
      
      return;
   }
   
   SetReward(reward_class=$,reward_amount=1)
   {
      piRewardClass = reward_class;
      piRewardAmount = reward_amount;

      return;
   }
   
   SetForceReward(force_reward=FALSE)
   {
      bForceReward = force_reward;

      return;
   }
   
   ClaimBountyReward()
   {
      local oReward;

      if piOwner=$
         OR NOT IsClass(piOwner,&User)
      {
         Send(self,@Delete);
         return;
      }
      
      if piRewardClass <> $
      {
         if piRewardAmount > 1
         {
            oReward = Create(piRewardClass,#number=piRewardAmount);
         }
         else
         {
            oReward = Create(piRewardClass);
         }
         
         if Send(piOwner,@ReqNewHold,#what=oReward)
            OR bForceReward
         {
            if IsClass(oReward,&NumberItem)
            {
               Send(piOwner,@NewHold,#what=oReward);
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_success_numbitem_rsc,
                  #parm1=Send(oReward,@GetNumber),#parm2=Send(oReward,@GetName));
            }
            else
            {
               Send(piOwner,@NewHold,#what=oReward);
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_success_singular_rsc,
                  #parm1=Send(oReward,@GetCapIndef),#parm2=Send(oReward,@GetName));
            }
            Send(self,@Delete);
         }
         else
         {
            Send(piOwner,@MsgSendUser,#message_rsc=bounty_inv_full_rsc);
         }
      }
      else
      {
         Send(self,@Delete);
      }

      return;
   }
   
   EndBountyTimer()
   {
      ptBountyTimer = $;
      
      if piOwner <> $
         AND isClass(piOwner,&User)
      {
         Send(piOwner,@MsgSendUser,#message_rsc=bounty_fail_rsc);
      }
      
      Send(self,@Delete);
      
      propagate;
   }
   
   Delete()
   {
      if ptBountyTimer <> $
      {
         DeleteTimer(ptBountyTimer);
         ptBountyTimer = $;
      }

      Send(SYS,@RemoveBountyFromGlobalList,#bounty=self);

      propagate;
   }
   
   CheckBountyMonster(monster_to_check=$)
   {
      if piMonsterTargetClass = $
      {
         return FALSE;
      }
      
      if IsClass(monster_to_check,piMonsterTargetClass)
      {
         return TRUE;
      }
      return FALSE;
   }
   
   CheckBountyItem(item_to_check=$)
   {
      if piItemTargetClass = $
      {
         return FALSE;
      }
      
      if IsClass(item_to_check,piItemTargetClass)
      {
         return TRUE;
      }
      return FALSE;
   }
   
   BountyReport()
   {
      local oReward,oTargetMonster,oTargetItem;

      oReward = $;
      oTargetMonster = $;
      oTargetItem = $;
      
      if piOwner = $
         OR NOT IsClass(piOwner,&User)
      {
         Send(self,@Delete);
         return;
      }
      
      if piRewardClass <> $
      {
         if piRewardAmount > 1
         {
            oReward = Create(piRewardClass,#number=piRewardAmount);
         }
         else
         {
            oReward = Create(piRewardClass);
         }
      }
      else
      {
         % Delete bounties without rewards, something went wrong
         Send(self,@Delete);
         return;
      }
      
      if piMonsterTargetClass <> $
      {
         oTargetMonster = Create(piMonsterTargetClass);
      }
      
      if piItemTargetClass <> $
      {
         oTargetItem = Create(piItemTargetClass);
      }

      if IsClass(oReward,&NumberItem)
      {
         if oTargetMonster <> $
            AND oTargetItem <> $
         {         
            Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_both_numbitem_rsc,
               #parm1=send(self,@GetRemainingMinutes),
               #parm2=send(oTargetMonster,@GetCapIndef),#parm3=send(oTargetMonster,@GetName),
               #parm4=send(oTargetItem,@GetCapIndef),#parm5=send(oTargetItem,@GetName),
               #parm6=send(oReward,@GetNumber),#parm7=send(oReward,@GetName));
         }
         else
         {
            if oTargetMonster <> $
            {
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_monster_numbitem_rsc,
                  #parm1=send(self,@GetRemainingMinutes),
                  #parm2=send(oTargetMonster,@GetCapIndef),#parm3=send(oTargetMonster,@GetName),
                  #parm4=send(oReward,@GetNumber),#parm5=send(oReward,@GetName));
            }
            else
            {
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_item_numbitem_rsc,
                  #parm1=send(self,@GetRemainingMinutes),
                  #parm2=send(oTargetItem,@GetCapIndef),#parm3=send(oTargetItem,@GetName),
                  #parm4=send(oReward,@GetNumber),#parm5=send(oReward,@GetName));
            }
         }
      }
      else
      {
         if oTargetMonster <> $
            AND oTargetItem <> $
         {         
            Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_both_singular_rsc,
               #parm1=send(self,@GetRemainingMinutes),
               #parm2=send(oTargetMonster,@GetCapIndef),#parm3=send(oTargetMonster,@GetName),
               #parm4=send(oTargetItem,@GetCapIndef),#parm5=send(oTargetItem,@GetName),
               #parm6=send(oReward,@GetCapIndef),#parm7=send(oReward,@GetName));
         }
         else
         {
            if oTargetMonster <> $
            {
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_monster_singular_rsc,
                  #parm1=send(self,@GetRemainingMinutes),
                  #parm2=send(oTargetMonster,@GetCapIndef),#parm3=send(oTargetMonster,@GetName),
                  #parm4=send(oReward,@GetCapIndef),#parm5=send(oReward,@GetName));
            }
            else
            {
               Send(piOwner,@MsgSendUser,#message_rsc=bounty_report_item_singular_rsc,
                  #parm1=send(self,@GetRemainingMinutes),
                  #parm2=send(oTargetItem,@GetCapIndef),#parm3=send(oTargetItem,@GetName),
                 #parm4=send(oReward,@GetCapIndef),#parm5=send(oReward,@GetName));
            }
         }
      }
            
      
      if oReward <> $
      {
         Send(oReward,@Delete);
      }
      
      if oTargetMonster <> $
      {
         Send(oTargetMonster,@Delete);
      }
      
      if oTargetItem <> $
      {
         Send(oTargetItem,@Delete);
      }

      return;
   }

   GetRemainingMinutes()
   {
      local iCurrentTime;

      iCurrentTime = GetTime();
      
      if viCreationTime > iCurrentTime
      {
         Send(self,@Delete);
         return;
      }

      return ((iCurrentTime - viCreationTime)/60);
   }
   
   % Used by self and SYS to eliminate bad bounties
   CheckValidBounty()
   {
      if piRewardClass = $
         OR piOwner = $
         OR NOT IsClass(piOwner,&User)
         OR ptBountyTimer = $
         OR (piMonsterTargetClass = $
            AND piItemTargetClass = $)
         OR viCreationTime > GetTime()
      {
         return FALSE;
      }

      return TRUE;
   }
   
   % Used by admin functions that can give or reward bounties
   OwnerIsOnline()
   {
      if piOwner = $
         OR NOT IsClass(piOwner,&User)
      {
         return FALSE;
      }
      
      return Send(piOwner,@IsLoggedOn);
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
