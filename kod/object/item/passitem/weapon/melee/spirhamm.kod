% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SpiritualHammer is MeleeWeapon

constants:

   include blakston.khd

resources:

   spirithammer_name_rsc = "spiritual hammer"
   spirithammer_icon_rsc = hammer.bgf
   spirithammer_desc_rsc = \
      "Inherently having holy blessings, this hammer is even more powerful "
      "than the standard variation."

   spirithammer_expires = \
      "Your spiritual hammer disappears in a puff of smoke!"

   spirithammer_window_overlay_rsc = povhamr.bgf
   spirithammer_player_overlay = hamrov.bgf

classvars:
   vrName = spirithammer_name_rsc
   vrIcon = spirithammer_icon_rsc
   vrDesc = spirithammer_desc_rsc

   viProficiency_Needed = SKID_PROFICIENCY_HAMMER

   viValue_average = 0
   % Light because it's magical.
   viWeight = 15
   viBulk = 60

   vrWeapon_window_overlay = spirithammer_window_overlay_rsc
   vrWeapon_overlay = spirithammer_player_overlay

   viGround_group = 1
   viInventory_group = 3
   viBroken_group = 2

   viDamage = 600
   viProficiencyBonus = 400
   viHitMod = 0
   viPrimaryScaling = 30
   viSecondaryScaling = 30
   viStab = 0
   viStrike = 120
   viSlash = 80
   viThrust = 40
   viFire = 0
   viTouch = 0
   viDisarmMod = 0
   viParryMod = 0
   viSpellpowerMod = 0
   viRange = 160

   viPrimaryStat = STAT_MIGHT
   viSecondaryStat = STAT_STAMINA
   viAttackType = ATCK_WEAP_MAGIC+ATCK_WEAP_BLUDGEON
   viSpellType = 0
   viDeviation = 30
   
properties:

   ptLongevity
   piItem_flags = 10

   piHitBonus = 0

messages:

   Constructor(iLongevity=$, iToHitBonus=$)
   {
      local oWeapAtt;

      if iLongevity = $
      {
         % Default is 1 hour.
         iLongevity = 3600000;
      }

      if iToHitBonus <> $
      {
         piHitBonus = iToHitBonus;
      }

      ptLongevity = CreateTimer(self,@WeaponExpires,iLongevity);

      Send(self,@SetSpellType,#flag=ATCK_SPELL_HOLY,#value=TRUE);

      propagate;
   }

   WeaponExpires()
   {
      ptLongevity = $;
      
      if IsClass(poOwner,&Player)
      {
         Send(poOwner,@MsgSendUser,#message_rsc=spirithammer_expires);
      }

      Send(self,@Delete);

      return;
   }

   Delete()
   {
      if ptLongevity <> $
      {
         DeleteTimer(ptLongevity);
         ptLongevity = $;
      }

      propagate;
   }

   DamageGear()
   {
      % Return here so that spiritual hammers don't get damaged.
      return;
   }

   CanEnchant()
   {
      return FALSE;
   }

   CanBeGivenToNPC()
   {
      return FALSE;
   }

   CanShatter()
   {
      return FALSE;
   }

   CanSwap()
   {
      return FALSE;
   }

   CanWeaken()
   {
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
