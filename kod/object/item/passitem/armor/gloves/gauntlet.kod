% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Gauntlet is Gloves

constants:

   include blakston.khd

resources:

  
   gauntlet_name_rsc = "gauntlets"
   gauntlet_icon_rsc = gauntlet.bgf
   gauntlet_desc_rsc = \
      "These polished steel gauntlets offer protection for "
      "hands and forearms allowing you to strike with "
      "greater confidence and force."

   gauntlet_condition_exc = " shine with the glint of perfection."
   gauntlet_condition_exc_mended = \
      " are in excellent condition, but have been patched before."
   gauntlet_condition_good = " are tarnished and scarred but still usable."
   gauntlet_condition_med = " have been harshly dented in several places."
   gauntlet_condition_poor = \
      " are in danger of falling apart.  Large plates of metal "
      "have been torn away during battle."
   gauntlet_condition_broken = " are ruined and offer no benefit."
   gauntlet_broken = "Your %s are a tangled mess of metal."

   standardshirt_rightarm_gauntlet_male = bre.bgf
   standardshirt_rightarm_gauntlet_female =brf.bgf
   standardshirt_leftarm_gauntlet_male = ble.bgf
   standardshirt_leftarm_gauntlet_female = blf.bgf

   barearm_rightarm_gauntlet_male = bri.bgf
   barearm_rightarm_gauntlet_female =brj.bgf
   barearm_leftarm_gauntlet_male = bli.bgf
   barearm_leftarm_gauntlet_female = blj.bgf

classvars:

   vrName = gauntlet_name_rsc
   vrIcon = gauntlet_icon_rsc
   vrDesc = gauntlet_desc_rsc
   vrPoss_article = object_article_cap_these_rsc

   vrItem_broken = gauntlet_broken

   viUse_type = ITEM_USE_GAUNTLET
   viItem_type = ITEMTYPE_ARMOR
   viUse_amount = 1

   viHits_init_min = 300
   viHits_init_max = 450

   viValue_average = 400
   viBulk = 50
   viWeight = 50

   viGround_group = 1
   viInventory_group = 2
   viBroken_group = 3

   vbShow_condition = TRUE
   vrCondition_exc = gauntlet_condition_exc 
   vrCondition_exc_mended = gauntlet_condition_exc_mended 
   vrCondition_good = gauntlet_condition_good 
   vrCondition_med = gauntlet_condition_med 
   vrCondition_poor = gauntlet_condition_poor 
   vrCondition_broken = gauntlet_condition_broken

   %%% Combat Mods %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   viCombatModDefense = 15
   viCombatModOffense = 20
   viCombatModMelee = 50

properties:

messages:

   DefaultValues()
   {
      plSkillmods = [[SKID_PUNCH,10],[SKID_BRAWLING,10]];

      propagate;
   }

   ReqUseSomething(what = $)
   {
      if IsClass(what,&Gauntlet)
      {
         if Send(poOwner,@TryUnuseItem,#what=self)
         {
            propagate;
         }
         else
         {
            return FALSE;
         }
      }

      propagate;
   }

   NewUsed(what = $)
   {
      local i, oFound, iPriority;

      oFound=$;
      for i in Send(what,@GetPlayerUsing)
      {
         iPriority = Send(i,@ItemChangesArms);
         if iPriority <> 0
         {
            if oFound = $ 
            {
               oFound = i;
            }
            else
            {
               if iPriority > Send(oFound,@ItemChangesArms)
               {
                  oFound = i;
               }
            }
         }
      }

      if oFound <> $
      {
         Send(oFound,@DoPlayerArt);
      }
      else
      {
         Send(what,@ResetPlayerArms);
      }

      propagate;
   }

   NewUnused(what = $)
   {
      local i, oFound, iPriority;

      oFound=$;
      for i in Send(what,@GetPlayerUsing)
      {
         iPriority = Send(i,@ItemChangesArms);
         if iPriority <> 0
         {
            if oFound <> $ 
            {
               if iPriority > Send(oFound,@ItemChangesArms)
               {
                  oFound = i;
               }
            }
            else
            {
               oFound = i;
            }
         }
      }

      if oFound <> $
      {
         Send(oFound,@DoPlayerArt); 
      }
      else
      {
         Send(what,@ResetPlayerArms);
      }

      propagate;
   }

   OverrideArms()
   {
      return TRUE;
   }

   GetOverrideRightArm(who=$)
   {
      local i, bFound;

      bFound = FALSE;
      for i in Send(who,@GetPlayerUsing)
      {
         if IsClass(i,&TankTop)
         {
            bFound = TRUE;

            break;
         }
      }

      if bFound
      {
         if Send(who,@GetGender) = GENDER_MALE
         {
            return barearm_rightarm_gauntlet_male;
         }
      
         return barearm_rightarm_gauntlet_female;
      }

      if Send(who,@GetGender) = GENDER_MALE
      {
         return standardshirt_rightarm_gauntlet_male;
      }

      return standardshirt_rightarm_gauntlet_female;
   }

   GetOverrideLeftArm(who=$)
   {
      local i, bFound;

      bFound = FALSE;
      for i in Send(who,@GetPlayerUsing)
      {
         if IsClass(i,&TankTop)
         {
            bFound = TRUE;

            break;
         }
      }

      if bFound
      {
         if Send(who,@GetGender) = GENDER_MALE
         {
            return barearm_leftarm_gauntlet_male;
         }
      
         return barearm_leftarm_gauntlet_female;
      }

      if Send(who,@GetGender) = GENDER_MALE
      {
         return standardshirt_leftarm_gauntlet_male;
      }

      return standardshirt_leftarm_gauntlet_female;
   }

   CanMend()
   {
      local i, oItemAtt;

      for i in plItem_Attributes
      {
         oItemAtt = Send(SYS,@FindItemAttByNum,
                         #num=Send(self,@GetNumFromCompound,#compound=First(i)));
         if oItemAtt = $
         {
            Debug("Illegal ItemAtt in list!");

            continue;
         }

         if NOT Send(oItemAtt,@ItemCanMend,#oItem=self)
         {
            return FALSE;
         }
      }

      return TRUE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
