% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
JewelofFroz is AttackModifier

constants:

   include blakston.khd

   ANIM_FLASH = 2

   FROZ_DAMAGE_ADD = 3

resources:

   frozjewel_name_rsc = "Jewel of Froz"
   frozjewel_icon_rsc = frozjewl.bgf
   frozjewel_desc_rsc = \
      "This gem was created by the great alchemist, Froz, in a secret process "
      "known only to him.  Rumor has it that it is a conduit for mystical "
      "aggression, using raw mana to boost elemental touch spells.  "
      "Your hand tingles when you hold it."

   frozjewel_desc_broken_rsc = "The jewel seems ordinary and dull."

   frozjewel_broken = "The Jewel of Froz now seems quite ordinary."

classvars:

   vrName = frozjewel_name_rsc
   vrIcon = frozjewel_icon_rsc
   
   viUse_type = ITEM_USE_HAND
   viUse_amount = 1

   viHits_init_min = 350
   viHits_init_max = 550

   viValue_average = 400
   viBulk = 10
   viWeight = 15

properties:

   vrDesc = frozjewel_desc_rsc
   viItem_type = ITEMTYPE_GEM

   piAnimation = ANIM_NONE

messages:

   % Jewels of Froz no longer modify touch spell damage.
   % Instead, they modify blast and bolt spell damage.
   % Attmod legacy code remains in superclass to avoid attmod list errors.
   
   % Froz damage is bonus damage, which ignores resists and vulnerabilities.
   ModifyAttackSpellDamage(who = $, what = $, bonus_damage = $, stroke_obj=$)
   {
      local i, iMana;
      
      if IsClass(stroke_obj,&AttackSpell)
      {
         iMana = 0;
         for i in send(who,@GetPlayerUsing)
         {
            if IsClass(i,&JewelOfFroz)
               OR IsClass(i,&PrincessShield)
            {
               % First jewel = 1 mana cost.  Second = 2 mana each (4 total).
               iMana = iMana + 1;
            }
         }

         if Send(who,@LoseMana,#amount=iMana) <> 0
         {
            % Add big bonus_damage if we spent the mana.
            Send(self,@DoFlash);
            return bonus_damage + FROZ_DAMAGE_ADD;
         }
      }
      
      return bonus_damage;
   }

   WeaponHitTarget()
   {
      return;
   }
   
   DoFlash()
   {
      piAnimation = ANIM_FLASH;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;
      
      return;
   }

   SendAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,2);

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

   SendInventoryAnimation()
   {
      if piAnimation = ANIM_FLASH
      {
         AddPacket(1,ANIMATE_ONCE,4,300,2,3,2,3,2,1);
      }
      else
      {
         AddPacket(1,ANIMATE_NONE,2,1);
      }
      
      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
