% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
AvarChieftainPoison is Monster

constants:

   include blakston.khd

   % Fire bow animation.  Normal attack animation with claws is anim_attack.
   ANIM_FIRE = 2

   FRAME_STAND = 1
   FRAME_WALK_START = 2
   FRAME_WALK_END = 6
   FRAME_ATTACK_START = 7
   FRAME_ATTACK_END = 11
   FRAME_FIRE_START = 12
   FRAME_FIRE_END = 16

   POISON_CHANCE = 6
   POISON_DURATION = 30000   %%% in milliseconds
   POISON_LOSSRATE = 10000    %%% in health points * 10^-4 / second

resources:

   AvarChiefPoison_koc_name_rsc = "teotkoavar"
   AvarChiefPoison_default_name = "avar chieftain"
   AvarChiefPoison_icon_rsc = avchief.bgf

   AvarChiefPoison_name = "corrupted avar chieftain"
   AvarChiefPoison_desc = \
      "One of the avars that have allied themselves with Qor, this clan "
      "leader teems with dark strength. In addition to keen accuracy "
      "with a bow and deadly slasher, it also wields lethal poisons."

   AvarChiefPoison_dead_icon_rsc = avchiefX.bgf
   AvarChiefPoison_dead_name_rsc = "former corrupted avar chieftain"

   AvarChiefPoison_sound_hit = ac_atkh.wav
   AvarChiefPoison_sound_miss = ac_atkm.wav
   AvarChiefPoison_sound_death = ac_dth.wav
   AvarChiefPoison_sound_aware = ac_awr.wav

   AvarChiefPoison_arrow = arrow.bgf

   AvarChiefPoison_fire_misses = \
      "The avar chieftain cocks and fires, narrowly missing you."
   AvarChiefPoison_fire_hits = \
      "The chieftain's well-aimed arrow strikes you with pinpoint accuracy!"

   AvarChiefPoison_poisoned_add_rsc = \
      "As the poison travels to your head, you begin "
      "to feel a little light-headed.  The room spins around you."

classvars:

   vrKocName = AvarChiefPoison_koc_name_rsc
   vrIcon = AvarChiefPoison_icon_rsc
   
   vrDead_icon = AvarChiefPoison_dead_icon_rsc
   vrDead_name = AvarChiefPoison_dead_name_rsc

   viIndefinite = ARTICLE_AN
   viTreasure_type = TID_AVAR_CHIEF_POISON
   viAttack_type = ATCK_WEAP_PIERCE
   viSpeed = SPEED_VERY_FAST
   viDefault_behavior = \
      AI_FIGHT_AGGRESSIVE | AI_MOVE_OPTIMAL_RANGE\
      | AI_FIGHT_WIZARD_KILLER | AI_FIGHT_MONSTERS
   viLevel = 200
   viDifficulty = 9
   viVisionDistance = 28
   viKarma = -95
   viCashmin = 1250
   viCashmax = 3000

   vrSound_hit = AvarChiefPoison_sound_hit
   vrSound_miss = AvarChiefPoison_sound_miss
   vrSound_aware = AvarChiefPoison_sound_aware
   vrSound_death = AvarChiefPoison_sound_death

   % Chance to do his 'spell' which is really a ranged attack
   viSpellChance = 6

properties:

   vrName = AvarChiefPoison_name
   vrDesc = AvarChiefPoison_desc

   pbFire = FALSE
   piAnimation = ANIM_NONE

messages:

   Constructor()
   {
      Send(self,@SetClan);

      propagate;
   }

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_FIRE, 40 ],
                        [-ATCK_SPELL_SHOCK, 40],
                        [-ATCK_SPELL_ACID, 55 ],
                        [-ATCK_SPELL_COLD, 40 ],
                        [-ATCK_SPELL_HOLY, -25 ],
                        [-ATCK_SPELL_UNHOLY, 80 ],
                        [ATCK_WEAP_SLASH, 25 ],
                        [ATCK_WEAP_THRUST, 10 ],
                        [ATCK_WEAP_BLUDGEON, -10 ],
                        [ATCK_WEAP_NERUDITE, 25 ]
                      ];

      propagate;
   }

   SetClan()
   {
      piColor_translation = XLAT_PURPLETOBLACK;

      if poOwner <> $
      {
         Send(poOwner,@SomethingChanged,#what=self);
      }

      return;
   }

   GetClan()
   {
      return piColor_translation;
   }

   MonsterAttack(what = $)
   {
      if pbFire
      {
         piAnimation = ANIM_FIRE;
      }
      else
      {
         piAnimation = ANIM_ATTACK;
      }

      pbFire = FALSE;
      
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   % You cannot parry the chief's attacks.
   CanParry()
   {
      return FALSE;
   }

   SendMoveAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      AddPacket(1,ANIMATE_CYCLE,4,200,2,FRAME_WALK_START,2,FRAME_WALK_END);

      return;
   }

   SendAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,FRAME_ATTACK_START,2,
                   FRAME_ATTACK_END,2,FRAME_STAND);

         return;
      }

      if piAnimation = ANIM_FIRE
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,FRAME_FIRE_START,2,
                   FRAME_FIRE_END,2,FRAME_STAND);

         return;
      }

      % If no body animation
      AddPacket(1,ANIMATE_NONE,2,3);

      return;
   }

   % This is technically a ranged attack, and we use RangedAttackChance
   % to see if we can do it. Use the same range as that for spells. We
   % also use piSpellChance for the base chance to do our ranged attack.
   MonsterCastSpell()
   {
      local iBase;

      iBase = Send(self,@RangedAttackChance,#base=(piSpellChance*6));

      if Random(1,iBase) = 1
         AND Send(self,@SquaredDistanceTo,#what=poTarget) < piSpellRange
         AND Send(poOwner,@LineOfSight,#obj1=self,#obj2=poTarget)
         AND Send(poOwner,@ReqSomethingAttack,#what=self,#victim=poTarget,
                  #use_weapon=self)
      {
         Send(self,@DoMissileAttack);

         return TRUE;
      }

      return FALSE;
   }

   DoMissileAttack()
   {
      pbFire = TRUE;
      Send(poOwner,@SomethingShot,#who=self,#target=poTarget,#projectile=self);
      Send(self,@TryAttack,#what=poTarget,#stroke_obj=self);

      return;
   }

   GetProjectileSpeed()
   {
      return 15;
   }

   SendProjectileAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

   GetProjectileIcon()
   {
      return AvarChiefPoison_arrow;
   }

   GetProjectileLightFlags()
   {
      % No lighting information.
      return LIGHT_FLAG_NONE;
   }

   GetOptimalRange()
   {
      return random(8,15);
   }

   HitSideEffect(what=$)
   {
      local oSpell;

      if Random(1,POISON_CHANCE) = 1
         AND IsClass(what,&Player)
         AND NOT Send(what,@IsEnchanted,#byClass=&Poison);
      {
         oSpell = Send(SYS,@FindSpellByNum,#num=SID_POISON);
         Send(oSpell,@MakePoisoned,#who=what,
               #lossrate=POISON_LOSSRATE,#duration=POISON_DURATION);

         if IsClass(what,&Player)
         {
            Send(what,@EffectSendUserDuration,#effect=EFFECT_WAVER,
                  #duration=10000);
            Send(what,@MsgSendUser,
                  #message_rsc=AvarChiefPoison_poisoned_add_rsc);
         }
      }

      return;
   }

   IsAlly(target = $)
   {
      if IsClass(target,&AvarChieftainPoison)
      {
         return TRUE;
      }

      % Charm checks up higher.
      propagate;
   }

   SpecialHatredBehavior(what=$)
   {
      % Avars attack other avars of other clans, but only in the
      %  temple of riija ruins (rid_KC3).
      if IsClass(what,&AvarShaman)
         OR IsClass(what,&AvarChieftain)
         OR IsClass(what,&Avar)
      {
         if poOwner <> $ AND Send(poOwner,@GetRoomNum) = RID_KC3
            AND Send(what,@GetClan) <> Send(self,@GetClan)
         {
            return 25;
         }
      }

      return 0;
   }

   GetTreasureType()
   {
      return viTreasure_type;
   }

   CreateTreasure(who=$,corpse=$)
   {
      local oTreasure, iNumber;

      % Apparitions, etc, provide no treasure
      if pbIllusion
      {
         return;
      }

      oTreasure = Create(&NeruditeArrow,#corpse=corpse);
      iNumber = Random(25,45);
      Send(oTreasure,@AddNumber,#number=iNumber);

      if Send(poOwner,@ReqNewHold,#what=oTreasure,
               #new_row=piRow,#new_col=piCol)
         AND Send(poOwner,@ReqSomethingMoved,#what=oTreasure,
                  #new_row=piRow,#new_col=piCol)
      {
         Send(poOwner,@NewHold,#what=oTreasure,#new_row=piRow,#new_col=piCol);
      }
      else
      {
         Send(oTreasure,@Delete);
      }

      propagate;
   }

   CreateDeadBody(killer=$)
   {
      local oBody;

      oBody = $;
      if vrDead_icon <> $
      {
         oBody = Create(&DeadBody,#icon=vrDead_icon,#name=vrDead_name,#mob=TRUE,
                        #BodyTranslation=Send(self,@GetClan),
                        #playername=Send(killer,@GetTrueName),
                        #monstername=vrName,#drawfx=viDead_drawfx);
      }

      return oBody;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
